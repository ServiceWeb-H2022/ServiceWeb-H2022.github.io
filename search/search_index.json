{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Services Web Hiver 2022 Horaire Lundi 10:15 - 12:05 Local C209 Vendredi 8:15 - 10:05 Local C205","title":"Accueil"},{"location":"#services-web","text":"Hiver 2022","title":"Services Web"},{"location":"#horaire","text":"Lundi 10:15 - 12:05 Local C209 Vendredi 8:15 - 10:05 Local C205","title":"Horaire"},{"location":"exercices/01_utilisation_api/","text":"Exercice 01 - Utilisation d\u2019un service web Points 1 \u00c0 l'aide de l'api disponible sur le site https://excuser.herokuapp.com/ . Pour chaque point je veux avoir l'url que vous avez utilis\u00e9 ainsi que le texte de ou des excuses. Affichez l'excuse dont le id est 184. G\u00e9n\u00e9rez 5 excuses d\u2019une cat\u00e9gorie de votre choix autre que la cat\u00e9gorie \u00ab college \u00bb. Points 2 \u00c0 l'aide de l'api disponible sur le site https://api.chucknorris.io/ r\u00e9pondez aux questions suivantes. Pour chacune des questions je veux avoir aussi l'url que vous avez utilis\u00e9 pour trouver la r\u00e9ponse. Combien il y a de cat\u00e9gorie au total? Combien de blagues contiennent le mot \"beer\"? Points 3 \u00c0 l'aide de l'api disponible sur le site https://xkcd.com/json.html r\u00e9cup\u00e9rez l'image du jour et ins\u00e9rez l\u00e0 dans le document de vos r\u00e9ponses.","title":"01 - Consommer une api"},{"location":"exercices/01_utilisation_api/#exercice-01-utilisation-dun-service-web","text":"","title":"Exercice 01 - Utilisation d\u2019un service web"},{"location":"exercices/01_utilisation_api/#points-1","text":"\u00c0 l'aide de l'api disponible sur le site https://excuser.herokuapp.com/ . Pour chaque point je veux avoir l'url que vous avez utilis\u00e9 ainsi que le texte de ou des excuses. Affichez l'excuse dont le id est 184. G\u00e9n\u00e9rez 5 excuses d\u2019une cat\u00e9gorie de votre choix autre que la cat\u00e9gorie \u00ab college \u00bb.","title":"Points 1"},{"location":"exercices/01_utilisation_api/#points-2","text":"\u00c0 l'aide de l'api disponible sur le site https://api.chucknorris.io/ r\u00e9pondez aux questions suivantes. Pour chacune des questions je veux avoir aussi l'url que vous avez utilis\u00e9 pour trouver la r\u00e9ponse. Combien il y a de cat\u00e9gorie au total? Combien de blagues contiennent le mot \"beer\"?","title":"Points 2"},{"location":"exercices/01_utilisation_api/#points-3","text":"\u00c0 l'aide de l'api disponible sur le site https://xkcd.com/json.html r\u00e9cup\u00e9rez l'image du jour et ins\u00e9rez l\u00e0 dans le document de vos r\u00e9ponses.","title":"Points 3"},{"location":"exercices/02_revision_php/","text":"Exercice 02 - Revision PHP Cr\u00e9er un fichier nomm\u00e9 exercice02.php et ajoutez la structure de base d'un fichier HTML. Faites le n\u00e9cessaire pour ajouter en PHP dans une balise H1 la phrase suivante : \"J'adore le PHP!!!\". Cr\u00e9ez un tableau associatif avec une dizaine de valeurs \u00e0 votre choix. Ajouter un nouvel \u00e9l\u00e9ment dans le tableau dont la cl\u00e9 se nommera \"sous-tableau\". La valeur de celui-ci sera un tableau sans cl\u00e9 avec les valeurs de votre choix. Modifier la valeur d'un des \u00e9l\u00e9ments du tableau du nouvel \u00e9l\u00e9ment que vous venez d'ajouter. Ajouter 10 \u00e9l\u00e9ments dans le tableau de l'\u00e9l\u00e9ment \"sous-tableau\" \u00e0 l'aide d'une boucle. Supprimer le dernier \u00e9l\u00e9ment du tableau de l'\u00e9l\u00e9ment \"sous-tableau\". Afficher le contenu du tableau dans la page web sous la forme d'une liste \u00e0 puces. Les valeurs du tableau de l'\u00e9l\u00e9ment \"sous-tableau\" sera une sous-liste de la premi\u00e8re. Cr\u00e9ez un deuxi\u00e8me tableau associatif et fusionnez le avec le premier en les \"d\u00e9ballants\". Si vous n'avez pas la bonne version de PHP vous pouvez utiliser la fonction array_merge(). Avec l'api de Random User, cr\u00e9ez une requ\u00eate GET qui retournera 50 utilisateurs al\u00e9atoire qui proviennent du Canada. Avec les fonction array_map() et array_filter() cr\u00e9ez un nouveau tableau avec uniquement les valeurs du nom, prenom, adresse courriel et nom d'usager de chacun des utilisateurs qui ont moins de 40 ans. Affichez le r\u00e9sultat dans la page HTML sous la forme d'un tableau. Remettez-moi le fichier exercice02.php une fois termin\u00e9.","title":"02 - Revision PHP"},{"location":"exercices/02_revision_php/#exercice-02-revision-php","text":"Cr\u00e9er un fichier nomm\u00e9 exercice02.php et ajoutez la structure de base d'un fichier HTML. Faites le n\u00e9cessaire pour ajouter en PHP dans une balise H1 la phrase suivante : \"J'adore le PHP!!!\". Cr\u00e9ez un tableau associatif avec une dizaine de valeurs \u00e0 votre choix. Ajouter un nouvel \u00e9l\u00e9ment dans le tableau dont la cl\u00e9 se nommera \"sous-tableau\". La valeur de celui-ci sera un tableau sans cl\u00e9 avec les valeurs de votre choix. Modifier la valeur d'un des \u00e9l\u00e9ments du tableau du nouvel \u00e9l\u00e9ment que vous venez d'ajouter. Ajouter 10 \u00e9l\u00e9ments dans le tableau de l'\u00e9l\u00e9ment \"sous-tableau\" \u00e0 l'aide d'une boucle. Supprimer le dernier \u00e9l\u00e9ment du tableau de l'\u00e9l\u00e9ment \"sous-tableau\". Afficher le contenu du tableau dans la page web sous la forme d'une liste \u00e0 puces. Les valeurs du tableau de l'\u00e9l\u00e9ment \"sous-tableau\" sera une sous-liste de la premi\u00e8re. Cr\u00e9ez un deuxi\u00e8me tableau associatif et fusionnez le avec le premier en les \"d\u00e9ballants\". Si vous n'avez pas la bonne version de PHP vous pouvez utiliser la fonction array_merge(). Avec l'api de Random User, cr\u00e9ez une requ\u00eate GET qui retournera 50 utilisateurs al\u00e9atoire qui proviennent du Canada. Avec les fonction array_map() et array_filter() cr\u00e9ez un nouveau tableau avec uniquement les valeurs du nom, prenom, adresse courriel et nom d'usager de chacun des utilisateurs qui ont moins de 40 ans. Affichez le r\u00e9sultat dans la page HTML sous la forme d'un tableau. Remettez-moi le fichier exercice02.php une fois termin\u00e9.","title":"Exercice 02 - Revision PHP"},{"location":"exercices/03_hello_world_api/","text":"Exercice 03 - HelloWorldApi On va cr\u00e9er notre premi\u00e8re api en PHP de base sans utiliser de framework et le moins de d\u00e9pendance possible. \u00c7a nous permettra de comprendre la base avant de nous lancer dans des projets plus complexes. Quoi de mieux qu'un Hello World pour commencer... Pr\u00e9requis Ampps (ou une autre \"stack\" incluant au minimum Apache, MySQL et PHP) - https://ampps.com/ Composer - https://getcomposer.org/ Description des routes Route Description /greetings/list Afficher toutes les salutations /greetings/random Afficher une salutation al\u00e9atoire /greetings/show/[id] Afficher une salutation selon selon son id Cr\u00e9ation du r\u00e9pertoire du projet Cr\u00e9ez \u00e0 la racine de votre r\u00e9pertoire \"localhost\" de Ampps (par d\u00e9faut \u00e7a sera C:\\Program Files\\Ampps\\www ) un nouveau r\u00e9pertoire pour votre projet nomm\u00e9 helloworldapi . Cr\u00e9ez aussi les sous-r\u00e9pertoire Src et api o\u00f9 vous allez retrouver la plupart des fichiers de l'api. Cr\u00e9ation de la base de donn\u00e9es et insertion des donn\u00e9es Cr\u00e9ez la base de donn\u00e9es helloworldapi . Ex\u00e9cutez le script suivant pour cr\u00e9er la table salutation et y ins\u00e9rer les donn\u00e9es de d\u00e9part. CREATE TABLE IF NOT EXISTS helloworldapi.salutations ( id INT auto_increment NOT NULL, texte varchar(100) NOT NULL, langue varchar(2) NOT NULL, PRIMARY KEY (id) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci; INSERT INTO helloworldapi.salutations (texte,langue) VALUES ('Bonjour le monde','fr'), ('Bon matin','fr'), ('Salut','fr'), ('Bonne nuit je vais travailler','fr'), ('Hello world','en'), ('Good morning','en'), ('Hi','en'), ('Good night, i''m going to work','en'), ('Hola Mundo','es'), ('Buenos dias','es'), ('Hola','es'), ('Buenas noches me voy a trabajar','es'), ('Hallo Welt','de'), ('guten Morgen','de'), ('Hallo','de'), ('Gute Nacht, ich gehe zur Arbei','de'); Ajout des informations de connexion Installez une d\u00e9pendance \u00e0 la biblioth\u00e8que DotEnv dans votre projet : https://github.com/vlucas/phpdotenv . Cr\u00e9ez les trois fichiers suivants : .gitignore .env .env.exemple DB_HOST=localhost DB_PORT=3306 DB_DATABASE= DB_USERNAME= DB_PASSWORD= .env DB_HOST=localhost DB_PORT=3306 DB_DATABASE=helloworldapi DB_USERNAME=votre_usager_mysql DB_PASSWORD=votre_mot_de_passe Connexion \u00e0 la base de donn\u00e9es Cr\u00e9ez le fichier Database.php dans le sous-r\u00e9pertoire Src Copiez le code suivant <?php /* Src/Database.php Gestion de la connexion \u00e0 la base de donn\u00e9es source : https://dev.to/shahbaz17/build-a-simple-rest-api-in-php-2edl */ namespace Src; class Database { private $dbConnection = null; public function __construct() { $host = $_ENV['DB_HOST']; $port = $_ENV['DB_PORT']; $db = $_ENV['DB_DATABASE']; $username = $_ENV['DB_USERNAME']; $password = $_ENV['DB_PASSWORD']; try { $this->dbConnection = new \\PDO( \"mysql:host=$host;port=$port;dbname=$db\", $username, $password ); } catch (\\PDOException $e) { exit($e->getMessage()); } } public function getConnection() { return $this->dbConnection; } } ?> Pour plus d'information sur PDO : www.php.net/manual/fr/book.pdo.php Modification au fichier composer.json Ajoutez un chargement automatique (autoload) du r\u00e9pertoire Src de votre projet dans le fichier composer.json. Votre fichier devrait ressembler \u00e0 ceci : { \"require\": { \"vlucas/phpdotenv\": \"^5.3\" }, // Section \u00e0 ajouter \"autoload\": { \"psr-4\": { \"Src\\\\\": \"src/\" } } } Rediriger les routes Nous allons inclure les param\u00e8tres de nos appel directement dans l'url de la requ\u00eate. ex: l'url http://localhost/HelloWorldApi/greetings/show/6/ va afficher la salutation avec le id 6, mais en r\u00e9alit\u00e9 l'url serait plut\u00f4t http://localhost/HelloWorldApi/api/index.php?view=single&id=$6 . Une fa\u00e7on de faire est de cr\u00e9er un fichier .htaccess pour indiquer \u00e0 notre serveur Apache de \"traduire\" l'url vers le bon fichier. Cr\u00e9ez un fichier .htaccess \u00e0 la racine de votre projet et incluez les lignes suivantes : # Activer la r\u00e9\u00e9criture de l'url Options +FollowSymlinks RewriteEngine on # D\u00e9finition des r\u00e8gles de r\u00e9\u00e9criture RewriteRule ^greetings/list api/index.php?view=all [nc,qsa] RewriteRule ^greetings/random api/index.php?view=single&random=1 [nc,qsa] RewriteRule ^greetings/show/([0-9]+) api/index.php?view=single&id=$1 [nc,qsa] Fichier de chargement Cr\u00e9ez le fichier bootstrap.php \u00e0 la racine du projet. Ce fichier s'occuper de charger le n\u00e9cessaire au fonctionnement de notre api. Copiez le code suivant <?php // Chargement des d\u00e9pendances require 'vendor/autoload.php'; use Src\\Database; // Chargement dans les variable d'environnement le contenu du fichier .env // Source : https://github.com/vlucas/phpdotenv $dotenv = Dotenv\\Dotenv::createImmutable(__DIR__); $dotenv->safeLoad(); // Initialisation et r\u00e9cup\u00e9ration de la connexion \u00e0 la base de donn\u00e9es $dbConnection = (new Database())->getConnection(); ?> Cr\u00e9ation de la \"porte d'entr\u00e9e\" Cr\u00e9ez le fichier index.php dans le sous-r\u00e9pertoire api . Ce fichier sera en quelque sorte le point d'entr\u00e9e de notre api. Copiez le code suivant dans le fichier. <?php /* api/index.php */ require(\"../bootstrap.php\"); use Src\\GreetingRestHandler; // R\u00e9cup\u00e9ration des param\u00eatres de la requ\u00eate $view = $_GET[\"view\"] ?? \"\"; $random = $_GET[\"random\"] ?? 0; $greetingId = $_GET[\"id\"] ?? 0; // Mappage selon les paramtes de l'url switch($view){ case \"all\": // Pour le endpoint /greetings/list $mobileRestHandler = new GreetingHandler($dbConnection); $mobileRestHandler->getAllGreetings(); break; // ... } ?> Cr\u00e9ation d'une classe pour construire la r\u00e9ponse Cr\u00e9ez le fichier SimpleRest.php dans le sous-r\u00e9pertoire Src . Cette classe aidera \u00e0 construire la r\u00e9ponse http \u00e0 la requ\u00eate. Copiez le code suivant dans le fichier. <?php /* Cette classe est utilis\u00e9e pour facilit\u00e9 la cr\u00e9ation de l'ent\u00eate http de la r\u00e9ponse Source : https://phppot.com/php/php-restful-web-service/ */ namespace Src; class SimpleRest { private $httpVersion = \"HTTP/1.1\"; public function setHttpHeaders($contentType, $statusCode){ $statusMessage = $this -> getHttpStatusMessage($statusCode); header($this->httpVersion. \" \". $statusCode .\" \". $statusMessage); header(\"Content-Type:\". $contentType); } public function getHttpStatusMessage($statusCode){ $httpStatus = array( 100 => 'Continue', 101 => 'Switching Protocols', 200 => 'OK', 201 => 'Created', 202 => 'Accepted', 203 => 'Non-Authoritative Information', 204 => 'No Content', 205 => 'Reset Content', 206 => 'Partial Content', 300 => 'Multiple Choices', 301 => 'Moved Permanently', 302 => 'Found', 303 => 'See Other', 304 => 'Not Modified', 305 => 'Use Proxy', 306 => '(Unused)', 307 => 'Temporary Redirect', 400 => 'Bad Request', 401 => 'Unauthorized', 402 => 'Payment Required', 403 => 'Forbidden', 404 => 'Not Found', 405 => 'Method Not Allowed', 406 => 'Not Acceptable', 407 => 'Proxy Authentication Required', 408 => 'Request Timeout', 409 => 'Conflict', 410 => 'Gone', 411 => 'Length Required', 412 => 'Precondition Failed', 413 => 'Request Entity Too Large', 414 => 'Request-URI Too Long', 415 => 'Unsupported Media Type', 416 => 'Requested Range Not Satisfiable', 417 => 'Expectation Failed', 500 => 'Internal Server Error', 501 => 'Not Implemented', 502 => 'Bad Gateway', 503 => 'Service Unavailable', 504 => 'Gateway Timeout', 505 => 'HTTP Version Not Supported'); return ($httpStatus[$statusCode]) ? $httpStatus[$statusCode] : $httpStatus[500]; } } ?> Cr\u00e9ation du contr\u00f4leur de la table salutations Cr\u00e9ez le fichier GreetingHandler.php dans le sous-r\u00e9pertoire Src . Ce fichier sert \u00e0 faire le pont entre les routes et l'acc\u00e8s aux donn\u00e9es de la base de donn\u00e9es. Il s'occupera aussi de cr\u00e9er la r\u00e9ponse \u00e0 retourner \u00e0 l'usager. Copiez le code suivant dans le fichier. <?php /* Src/GreetingHandler.php */ namespace Src; use Src\\SimpleRest; use Src\\Greeting; class GreetingHandler extends SimpleRest { private $db; public function __construct($db) { $this->db = $db; } function getAllGreetings() { $greeting = new Greeting($this->db); $rawData = $greeting->getAllGreetings(); if(empty($rawData)) { $statusCode = 404; $rawData = array('error' => 'Aucune salutations trouv\u00e9es!'); } else { $statusCode = 200; } $this->buildResponse($rawData, $statusCode); } public function buildResponse($data, $statusCode) { $requestContentType = $_SERVER['HTTP_ACCEPT']; $this ->setHttpHeaders($requestContentType, $statusCode); if(strpos($requestContentType,'application/json') !== false){ $response = $this->encodeJson($data); echo $response; } else if(strpos($requestContentType,'text/html') !== false){ $response = $this->encodeHtml($data); echo $response; } else if(strpos($requestContentType,'application/xml') !== false){ $response = $this->encodeXml($data); echo $response; } } public function encodeHtml($responseData) { $htmlResponse = \"<table border='1'>\"; foreach($responseData as $key=>$value) { $htmlResponse .= \"<tr><td>\". $key. \"</td><td>\". $value. \"</td></tr>\"; } $htmlResponse .= \"</table>\"; return $htmlResponse; } public function encodeJson($responseData) { $jsonResponse = json_encode($responseData); return $jsonResponse; } public function encodeXml($responseData) { // creating object of SimpleXMLElement $xml = new SimpleXMLElement('<?xml version=\"1.0\"?><mobile></mobile>'); foreach($responseData as $key=>$value) { $xml->addChild($key, $value); } return $xml->asXML(); } } ?> Couche d'acc\u00e8s aux donn\u00e9es de la table salutations Cr\u00e9ez le fichier Greeting.php dans le sous-r\u00e9pertoire Src . Ce fichier va ex\u00e9cuter les requ\u00eates \u00e0 la base de donn\u00e9es et retourner les donn\u00e9es brutes au contr\u00f4leur. Copiez le code suivant dans le fichier. <?php namespace Src; class Greeting{ private $db; public function __construct($db) { $this->db = $db; } public function getAllGreetings(){ $query = \"SELECT id, texte, langue FROM salutations;\"; $statement = $this->db->query($query); $result = $statement->fetchAll(\\PDO::FETCH_ASSOC); return $result; } } Test de la route La route /greetings/list est maintenant fonctionnelle, vous pouvez la tester avec l'url complet qui sera http://localhost/HelloWorldApi/greetings/list . Testez la route dans un navigateur. Testez aussi la route avec Postman. Cr\u00e9ation des autres routes En vous basant sur le code du projet, cr\u00e9ez les deux routes restantes : /greetings/random - Affiche une salutation al\u00e9atoire /greetings/show/[id] - Affiche la salutation avec le id sp\u00e9cifi\u00e9 en param\u00e8tre Testez ensuite les nouvelles routes avec Postman. Modification de la route de la salutation al\u00e9atoire Modifiez la route /greetings/random pour qu'elle puisse prendre en param\u00e8tre la langue de la salutation. La r\u00e8gle de r\u00e9\u00e9criture dans le fichier .htaccess deviendra RewriteRule ^greetings/random/?(.*)$ api/index.php?view=single&random=1&langue=$1 [nc,qsa] ?(.*) indique un param\u00e8tre optionnel acceptant n'importe quel caract\u00e8re. langue=$1 indique que le param\u00e8tre sera stock\u00e9 dans la variable langue . Les codes de langue sont dans la base de donn\u00e9es (fr, en, es et de). Si on entre autre chose, soit vous retournez une erreur 404, soit vous n'en tenez pas compte et s\u00e9lectionnez la salutation parmi toute les langues. Au final la route /greetings/random/en retournera une citation al\u00e9atoire en anglais.","title":"03 - HelloWorldApi"},{"location":"exercices/03_hello_world_api/#exercice-03-helloworldapi","text":"On va cr\u00e9er notre premi\u00e8re api en PHP de base sans utiliser de framework et le moins de d\u00e9pendance possible. \u00c7a nous permettra de comprendre la base avant de nous lancer dans des projets plus complexes. Quoi de mieux qu'un Hello World pour commencer...","title":"Exercice 03 - HelloWorldApi"},{"location":"exercices/03_hello_world_api/#prerequis","text":"Ampps (ou une autre \"stack\" incluant au minimum Apache, MySQL et PHP) - https://ampps.com/ Composer - https://getcomposer.org/","title":"Pr\u00e9requis"},{"location":"exercices/03_hello_world_api/#description-des-routes","text":"Route Description /greetings/list Afficher toutes les salutations /greetings/random Afficher une salutation al\u00e9atoire /greetings/show/[id] Afficher une salutation selon selon son id","title":"Description des routes"},{"location":"exercices/03_hello_world_api/#creation-du-repertoire-du-projet","text":"Cr\u00e9ez \u00e0 la racine de votre r\u00e9pertoire \"localhost\" de Ampps (par d\u00e9faut \u00e7a sera C:\\Program Files\\Ampps\\www ) un nouveau r\u00e9pertoire pour votre projet nomm\u00e9 helloworldapi . Cr\u00e9ez aussi les sous-r\u00e9pertoire Src et api o\u00f9 vous allez retrouver la plupart des fichiers de l'api.","title":"Cr\u00e9ation du r\u00e9pertoire du projet"},{"location":"exercices/03_hello_world_api/#creation-de-la-base-de-donnees-et-insertion-des-donnees","text":"Cr\u00e9ez la base de donn\u00e9es helloworldapi . Ex\u00e9cutez le script suivant pour cr\u00e9er la table salutation et y ins\u00e9rer les donn\u00e9es de d\u00e9part. CREATE TABLE IF NOT EXISTS helloworldapi.salutations ( id INT auto_increment NOT NULL, texte varchar(100) NOT NULL, langue varchar(2) NOT NULL, PRIMARY KEY (id) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci; INSERT INTO helloworldapi.salutations (texte,langue) VALUES ('Bonjour le monde','fr'), ('Bon matin','fr'), ('Salut','fr'), ('Bonne nuit je vais travailler','fr'), ('Hello world','en'), ('Good morning','en'), ('Hi','en'), ('Good night, i''m going to work','en'), ('Hola Mundo','es'), ('Buenos dias','es'), ('Hola','es'), ('Buenas noches me voy a trabajar','es'), ('Hallo Welt','de'), ('guten Morgen','de'), ('Hallo','de'), ('Gute Nacht, ich gehe zur Arbei','de');","title":"Cr\u00e9ation de la base de donn\u00e9es et insertion des donn\u00e9es"},{"location":"exercices/03_hello_world_api/#ajout-des-informations-de-connexion","text":"Installez une d\u00e9pendance \u00e0 la biblioth\u00e8que DotEnv dans votre projet : https://github.com/vlucas/phpdotenv . Cr\u00e9ez les trois fichiers suivants : .gitignore .env .env.exemple DB_HOST=localhost DB_PORT=3306 DB_DATABASE= DB_USERNAME= DB_PASSWORD= .env DB_HOST=localhost DB_PORT=3306 DB_DATABASE=helloworldapi DB_USERNAME=votre_usager_mysql DB_PASSWORD=votre_mot_de_passe","title":"Ajout des informations de connexion"},{"location":"exercices/03_hello_world_api/#connexion-a-la-base-de-donnees","text":"Cr\u00e9ez le fichier Database.php dans le sous-r\u00e9pertoire Src Copiez le code suivant <?php /* Src/Database.php Gestion de la connexion \u00e0 la base de donn\u00e9es source : https://dev.to/shahbaz17/build-a-simple-rest-api-in-php-2edl */ namespace Src; class Database { private $dbConnection = null; public function __construct() { $host = $_ENV['DB_HOST']; $port = $_ENV['DB_PORT']; $db = $_ENV['DB_DATABASE']; $username = $_ENV['DB_USERNAME']; $password = $_ENV['DB_PASSWORD']; try { $this->dbConnection = new \\PDO( \"mysql:host=$host;port=$port;dbname=$db\", $username, $password ); } catch (\\PDOException $e) { exit($e->getMessage()); } } public function getConnection() { return $this->dbConnection; } } ?> Pour plus d'information sur PDO : www.php.net/manual/fr/book.pdo.php","title":"Connexion \u00e0 la base de donn\u00e9es"},{"location":"exercices/03_hello_world_api/#modification-au-fichier-composerjson","text":"Ajoutez un chargement automatique (autoload) du r\u00e9pertoire Src de votre projet dans le fichier composer.json. Votre fichier devrait ressembler \u00e0 ceci : { \"require\": { \"vlucas/phpdotenv\": \"^5.3\" }, // Section \u00e0 ajouter \"autoload\": { \"psr-4\": { \"Src\\\\\": \"src/\" } } }","title":"Modification au fichier composer.json"},{"location":"exercices/03_hello_world_api/#rediriger-les-routes","text":"Nous allons inclure les param\u00e8tres de nos appel directement dans l'url de la requ\u00eate. ex: l'url http://localhost/HelloWorldApi/greetings/show/6/ va afficher la salutation avec le id 6, mais en r\u00e9alit\u00e9 l'url serait plut\u00f4t http://localhost/HelloWorldApi/api/index.php?view=single&id=$6 . Une fa\u00e7on de faire est de cr\u00e9er un fichier .htaccess pour indiquer \u00e0 notre serveur Apache de \"traduire\" l'url vers le bon fichier. Cr\u00e9ez un fichier .htaccess \u00e0 la racine de votre projet et incluez les lignes suivantes : # Activer la r\u00e9\u00e9criture de l'url Options +FollowSymlinks RewriteEngine on # D\u00e9finition des r\u00e8gles de r\u00e9\u00e9criture RewriteRule ^greetings/list api/index.php?view=all [nc,qsa] RewriteRule ^greetings/random api/index.php?view=single&random=1 [nc,qsa] RewriteRule ^greetings/show/([0-9]+) api/index.php?view=single&id=$1 [nc,qsa]","title":"Rediriger les routes"},{"location":"exercices/03_hello_world_api/#fichier-de-chargement","text":"Cr\u00e9ez le fichier bootstrap.php \u00e0 la racine du projet. Ce fichier s'occuper de charger le n\u00e9cessaire au fonctionnement de notre api. Copiez le code suivant <?php // Chargement des d\u00e9pendances require 'vendor/autoload.php'; use Src\\Database; // Chargement dans les variable d'environnement le contenu du fichier .env // Source : https://github.com/vlucas/phpdotenv $dotenv = Dotenv\\Dotenv::createImmutable(__DIR__); $dotenv->safeLoad(); // Initialisation et r\u00e9cup\u00e9ration de la connexion \u00e0 la base de donn\u00e9es $dbConnection = (new Database())->getConnection(); ?>","title":"Fichier de chargement"},{"location":"exercices/03_hello_world_api/#creation-de-la-porte-dentree","text":"Cr\u00e9ez le fichier index.php dans le sous-r\u00e9pertoire api . Ce fichier sera en quelque sorte le point d'entr\u00e9e de notre api. Copiez le code suivant dans le fichier. <?php /* api/index.php */ require(\"../bootstrap.php\"); use Src\\GreetingRestHandler; // R\u00e9cup\u00e9ration des param\u00eatres de la requ\u00eate $view = $_GET[\"view\"] ?? \"\"; $random = $_GET[\"random\"] ?? 0; $greetingId = $_GET[\"id\"] ?? 0; // Mappage selon les paramtes de l'url switch($view){ case \"all\": // Pour le endpoint /greetings/list $mobileRestHandler = new GreetingHandler($dbConnection); $mobileRestHandler->getAllGreetings(); break; // ... } ?>","title":"Cr\u00e9ation de la \"porte d'entr\u00e9e\""},{"location":"exercices/03_hello_world_api/#creation-dune-classe-pour-construire-la-reponse","text":"Cr\u00e9ez le fichier SimpleRest.php dans le sous-r\u00e9pertoire Src . Cette classe aidera \u00e0 construire la r\u00e9ponse http \u00e0 la requ\u00eate. Copiez le code suivant dans le fichier. <?php /* Cette classe est utilis\u00e9e pour facilit\u00e9 la cr\u00e9ation de l'ent\u00eate http de la r\u00e9ponse Source : https://phppot.com/php/php-restful-web-service/ */ namespace Src; class SimpleRest { private $httpVersion = \"HTTP/1.1\"; public function setHttpHeaders($contentType, $statusCode){ $statusMessage = $this -> getHttpStatusMessage($statusCode); header($this->httpVersion. \" \". $statusCode .\" \". $statusMessage); header(\"Content-Type:\". $contentType); } public function getHttpStatusMessage($statusCode){ $httpStatus = array( 100 => 'Continue', 101 => 'Switching Protocols', 200 => 'OK', 201 => 'Created', 202 => 'Accepted', 203 => 'Non-Authoritative Information', 204 => 'No Content', 205 => 'Reset Content', 206 => 'Partial Content', 300 => 'Multiple Choices', 301 => 'Moved Permanently', 302 => 'Found', 303 => 'See Other', 304 => 'Not Modified', 305 => 'Use Proxy', 306 => '(Unused)', 307 => 'Temporary Redirect', 400 => 'Bad Request', 401 => 'Unauthorized', 402 => 'Payment Required', 403 => 'Forbidden', 404 => 'Not Found', 405 => 'Method Not Allowed', 406 => 'Not Acceptable', 407 => 'Proxy Authentication Required', 408 => 'Request Timeout', 409 => 'Conflict', 410 => 'Gone', 411 => 'Length Required', 412 => 'Precondition Failed', 413 => 'Request Entity Too Large', 414 => 'Request-URI Too Long', 415 => 'Unsupported Media Type', 416 => 'Requested Range Not Satisfiable', 417 => 'Expectation Failed', 500 => 'Internal Server Error', 501 => 'Not Implemented', 502 => 'Bad Gateway', 503 => 'Service Unavailable', 504 => 'Gateway Timeout', 505 => 'HTTP Version Not Supported'); return ($httpStatus[$statusCode]) ? $httpStatus[$statusCode] : $httpStatus[500]; } } ?>","title":"Cr\u00e9ation d'une classe pour construire la r\u00e9ponse"},{"location":"exercices/03_hello_world_api/#creation-du-controleur-de-la-table-salutations","text":"Cr\u00e9ez le fichier GreetingHandler.php dans le sous-r\u00e9pertoire Src . Ce fichier sert \u00e0 faire le pont entre les routes et l'acc\u00e8s aux donn\u00e9es de la base de donn\u00e9es. Il s'occupera aussi de cr\u00e9er la r\u00e9ponse \u00e0 retourner \u00e0 l'usager. Copiez le code suivant dans le fichier. <?php /* Src/GreetingHandler.php */ namespace Src; use Src\\SimpleRest; use Src\\Greeting; class GreetingHandler extends SimpleRest { private $db; public function __construct($db) { $this->db = $db; } function getAllGreetings() { $greeting = new Greeting($this->db); $rawData = $greeting->getAllGreetings(); if(empty($rawData)) { $statusCode = 404; $rawData = array('error' => 'Aucune salutations trouv\u00e9es!'); } else { $statusCode = 200; } $this->buildResponse($rawData, $statusCode); } public function buildResponse($data, $statusCode) { $requestContentType = $_SERVER['HTTP_ACCEPT']; $this ->setHttpHeaders($requestContentType, $statusCode); if(strpos($requestContentType,'application/json') !== false){ $response = $this->encodeJson($data); echo $response; } else if(strpos($requestContentType,'text/html') !== false){ $response = $this->encodeHtml($data); echo $response; } else if(strpos($requestContentType,'application/xml') !== false){ $response = $this->encodeXml($data); echo $response; } } public function encodeHtml($responseData) { $htmlResponse = \"<table border='1'>\"; foreach($responseData as $key=>$value) { $htmlResponse .= \"<tr><td>\". $key. \"</td><td>\". $value. \"</td></tr>\"; } $htmlResponse .= \"</table>\"; return $htmlResponse; } public function encodeJson($responseData) { $jsonResponse = json_encode($responseData); return $jsonResponse; } public function encodeXml($responseData) { // creating object of SimpleXMLElement $xml = new SimpleXMLElement('<?xml version=\"1.0\"?><mobile></mobile>'); foreach($responseData as $key=>$value) { $xml->addChild($key, $value); } return $xml->asXML(); } } ?>","title":"Cr\u00e9ation du contr\u00f4leur de la table salutations"},{"location":"exercices/03_hello_world_api/#couche-dacces-aux-donnees-de-la-table-salutations","text":"Cr\u00e9ez le fichier Greeting.php dans le sous-r\u00e9pertoire Src . Ce fichier va ex\u00e9cuter les requ\u00eates \u00e0 la base de donn\u00e9es et retourner les donn\u00e9es brutes au contr\u00f4leur. Copiez le code suivant dans le fichier. <?php namespace Src; class Greeting{ private $db; public function __construct($db) { $this->db = $db; } public function getAllGreetings(){ $query = \"SELECT id, texte, langue FROM salutations;\"; $statement = $this->db->query($query); $result = $statement->fetchAll(\\PDO::FETCH_ASSOC); return $result; } }","title":"Couche d'acc\u00e8s aux donn\u00e9es de la table salutations"},{"location":"exercices/03_hello_world_api/#test-de-la-route","text":"La route /greetings/list est maintenant fonctionnelle, vous pouvez la tester avec l'url complet qui sera http://localhost/HelloWorldApi/greetings/list . Testez la route dans un navigateur. Testez aussi la route avec Postman.","title":"Test de la route"},{"location":"exercices/03_hello_world_api/#creation-des-autres-routes","text":"En vous basant sur le code du projet, cr\u00e9ez les deux routes restantes : /greetings/random - Affiche une salutation al\u00e9atoire /greetings/show/[id] - Affiche la salutation avec le id sp\u00e9cifi\u00e9 en param\u00e8tre Testez ensuite les nouvelles routes avec Postman.","title":"Cr\u00e9ation des autres routes"},{"location":"exercices/03_hello_world_api/#modification-de-la-route-de-la-salutation-aleatoire","text":"Modifiez la route /greetings/random pour qu'elle puisse prendre en param\u00e8tre la langue de la salutation. La r\u00e8gle de r\u00e9\u00e9criture dans le fichier .htaccess deviendra RewriteRule ^greetings/random/?(.*)$ api/index.php?view=single&random=1&langue=$1 [nc,qsa] ?(.*) indique un param\u00e8tre optionnel acceptant n'importe quel caract\u00e8re. langue=$1 indique que le param\u00e8tre sera stock\u00e9 dans la variable langue . Les codes de langue sont dans la base de donn\u00e9es (fr, en, es et de). Si on entre autre chose, soit vous retournez une erreur 404, soit vous n'en tenez pas compte et s\u00e9lectionnez la salutation parmi toute les langues. Au final la route /greetings/random/en retournera une citation al\u00e9atoire en anglais.","title":"Modification de la route de la salutation al\u00e9atoire"},{"location":"notes_de_cours/revision_php/","text":"R\u00e9vision PHP Syntaxe Un script PHP doit \u00eatre d\u00e9buter par <?php et ce termin\u00e9 par ?> Chaque ligne de code se termine par un point-virgule. Les noms de variable d\u00e9butent par le symbole $ Ex\u00e9cuter un script en ligne de commande Pour lancer un script depuis la ligne de commande # Si le chemin vers l'interpreteur PHP est dans les variables d'environnement > php monScript.php # Sinon il faut sp\u00e9cifier le chemin en entier > 'C:\\Program Files\\Ampps\\php-7.3\\php.exe' monScript.php Op\u00e9rateur de coalescence des nuls ( ?? ) ?? est un op\u00e9rateur logique qui retourne la premi\u00e8re valeur qui existe et qui est non null. Il est possible d'encha\u00eener plusieurs op\u00e9rateurs de coalescence \u00e0 la suite. <?php // Si $_GET['utilisateur'] n'est pas d\u00e9fini ou vaut null, $utilisateur vaudra 'aucun' $utilisateur = $_GET['utilisateur'] ?? 'aucun'; // On peut encha\u00eener plusieurs ?? comme ceci $utilisateur = $_GET['utilisateur'] ?? $_POST['utilisateur'] ?? 'aucun'; ?> Tableau D\u00e9claration d'un tableau Pour d\u00e9clarer un tableau, on peut utiliser la fonction array() ou en notation courte utiliser [] <?php // D\u00e9claration d'un tableau avec la fonction array() $monTableau = array(\"item1\", \"item2\", \"item3\"); // D\u00e9claration d'un tableau avec la notation courte $monTableau = [\"item1\", \"item2\", \"item3\"]; ?> Chaque \u00e9l\u00e9ment du tableau est associ\u00e9 \u00e0 une cl\u00e9 (son index dans le tableau). Si la cl\u00e9 n'est pas sp\u00e9cifi\u00e9, comme dans l'exemple plus haut, elle sera autog\u00e9n\u00e9r\u00e9 de fa\u00e7on incr\u00e9mentiel (0, 1, 2, etc...). Il est aussi possible de d\u00e9finir la cl\u00e9 de chaque item. <?php $monTableau = array( 1 => \"item1\", 2 => \"item2\", 3 => \"item3\", ); $monTableau = [ \"fruits\" => [\"banane\", \"pomme\", \"raisin\"], \"legumes\" => [\"carotte\", \"patate\", \"navet\"], ]; ?> Acc\u00e8s aux \u00e9l\u00e9ments d'un tableau On acc\u00e8de \u00e0 la valeur d'un \u00e9l\u00e9ment du tableau par sa cl\u00e9 <?php $monTableau = [\"item1\", \"item2\", \"item3\"]; echo $monTableau[0]; // \"item1\" $monTableau = [ \"fruits\" => [\"banane\", \"pomme\", \"raisin\"], \"legumes\" => [\"carotte\", \"patate\", \"navet\"], ]; echo $monTableau[\"legumes\"][1]; // \"patate\" ?> Ajouter/modifier/supprimer un \u00e9l\u00e9ment <?php $monTableau = [\"item1\", \"item2\", \"item3\"]; // Pour ajouter un \u00e9l\u00e9ment au tableau, on donne ou non une cl\u00e9 libre $monTableau[] = \"item4\"; $monTableau[4] = \"item5\"; // Pour modifier un \u00e9l\u00e9ment, on doit donner la cl\u00e9 de l'\u00e9l\u00e9ment \u00e0 modifier $monTableau[4] = \"item5 modifi\u00e9\" // On supprime un item avec la fonction unset en sp\u00e9cifiant la cl\u00e9 de l'\u00e9l\u00e9ment \u00e0 supprimer unset($monTableau[4]); // Attention, si aucune cl\u00e9 n'est donn\u00e9e, c'est tout le tableau qui sera supprim\u00e9 unset($monTableau); ?> Boucle sur un tableau Pour boucler sur les \u00e9l\u00e9ments d'un tableau, on utilise foreach <?php $monTableau = [ \"prenom\" => \"Mathieu\", \"nom\" => \"Frechette\", ]; foreach($monTableau as $item) { echo \"$item\\n\"; } /* Mathieu Frechette */ // On peut aussi r\u00e9cup\u00e9rer la cl\u00e9 de chaque \u00e9l\u00e9ment foreach($monTableau as $cle => $valeur) { echo \"$cle = $valeur\\n\"; } /* prenom = Mathieu nom = frechette */ ?> D\u00e9baller un tableau En pr\u00e9fixant le tableau par trois points ( ...$monTableau), le tableau sera \"d\u00e9ball\u00e9\" lors de se d\u00e9finition, c'est \u00e0 dire qu'on aura acc\u00e8s \u00e0 tous les \u00e9l\u00e9ments du tableau. (Disponible depuis PHP 7.4.0) <?php $monTableau = [\"item1\", \"item2\", \"item3\"]; // Copier le tableau $tableau2 = [...$monTableau]; // [\"item1\", \"item2\", \"item3\"] // Ajouter des \u00e9l\u00e9ments au tableau; $tableau3 = [\"item0\", ...$monTableau, \"item4\"]; // [\"item0, \"item1\", \"item2\", \"item3\", \"item4\"] // Fusionner des tableaux $tableau4 = [...$tableau2, ...$tableau3]; // [\"item1\", \"item2\", \"item3\", \"item0, \"item1\", \"item2\", \"item3\", \"item4\"] // On peut aussi l'utiliser avec une fonction qui retourne un tableau function getTableau() { return [\"item5\", \"item6\"]; } $tableau5 = [...getTableau(), \"item7\"]; //[\"item5\", \"item6\", \"item7\"] ?> Array_filter() La fonction array_filter() permet de filter les \u00e9l\u00e9ments d'un tableau par une fonction de Callback. Array_filter() prends en param\u00e8tre le tableau sur lequelle effectuer le traitement la fonction de Callback. On peut appeler une fonction existante ou bien directement la d\u00e9clarer \u00e0 l'int\u00e9rieur de array_map(). <?php // Soit le tableau de nombre suivant $nombres = [1, 2, 3, 4, 5]; // On veut cr\u00e9er un nouveau tableau avec uniquement les nombres impairs $nombresImpair = array_filter($nombres, function ($nombre) { return $nombre % 2 === 1; } ); // [1, 3, 5] ?> Array_map() La fonction array_map() permet d'appliquer une fonction sur chaque \u00e9l\u00e9ment d'un tableau et de retourner un nouveau tableau du r\u00e9sultat. Array_map() prends en param\u00e8tre la fonction de Callback et le tableau sur lequelle effectuer le traitement. On peut appeler une fonction existante ou bien directement la d\u00e9clarer \u00e0 l'int\u00e9rieur de array_map(). <?php // Soit le tableau de nombre suivant $nombres = [10,12,14,13]; // On veut cr\u00e9er un tableau avec de ces nombres doubl\u00e9s $nombresDouble = array_map(function ($nombre) { return $nombre * 2; }, $nombres); // [20, 22, 28, 26] ?> R\u00e9f\u00e9rence : www.php.net/manual/fr/language.types.array.php www.w3schools.com/php/php_ref_array.asp www.php.net/manual/fr/ref.array.php JSON en PHP Pour encoder une valeur en format JSON, on utilisera la fonction json_encode(). <?php $monTableau = [ \"prenom\" => \"Mathieu\", \"nom\" => \"Frechette\", ]; echo json_encode($monTableau); /* { \"prenom\":\"Mathieu\", \"nom\":\"Frechette\" } */ $monTableauPlusComplexe = [ \"Resultats\" => [ [ \"prenom\" => \"Mathieu\", \"nom\" => \"Frechette\", ], [ \"prenom\" => \"Anthony\", \"nom\" => \"Frechette\", ], ] ]; echo json_encode($monTableauPlusComplexe); /* { \"Resultats\":[ { \"prenom\":\"Mathieu\", \"nom\":\"Frechette\" }, { \"prenom\":\"Anthony\", \"nom\":\"Frechette\" } ] } */ ?> \u00c0 l'inverse, pour convertir un objet JSON en un objet ou un tableau associatif (avec des cl\u00e9s d\u00e9finies) on utilisera la fonction json_decode(). Elle prend en param\u00eatre l'objet Json \u00e0 convertir et optionnellement un valeur boolean qui indique si on veut que soit cr\u00e9e un tableau associatif ou non. Par d\u00e9faut ce param\u00eatre prend la valeur false, ce qui cr\u00e9e un objet. <?php $jsonData = '{\"prenom\":\"Mathieu\",\"nom\":\"Frechette\"}'; $objetUsager = json_decode($jsonData); echo $objetUsager->prenom; // Mathieu $tableauUsager = json_decode($jsonData, true); echo $tableauUsager[\"prenom\"]; // Mathieu ?> Effectuer un appel GET \u00e0 un service web On peut utiliser la fonction native file_get_contents() pour faire un appel GET \u00e0 un api avec un url. <?php $url = 'https://api.chucknorris.io/jokes/random'; $reponseEnJson = file_get_contents($url); /* { \"categories\": [], \"created_at\": \"2020-01-05 13:42:29.296379\", \"icon_url\": \"https://assets.chucknorris.host/img/avatar/chuck-norris.png\", \"id\": \"bESHJ3YrTEW638ky0rr3Yg\", \"updated_at\": \"2020-01-05 13:42:29.296379\", \"url\": \"https://api.chucknorris.io/jokes/bESHJ3YrTEW638ky0rr3Yg\", \"value\": \"Chuck Norris doesn't need an axe or saw to cut down a tree -- he needs only his foot, or his fist, or his glare.\" } */ $objetReponse = json_decode($reponseEnJson); echo $objetReponse->value; // Chuck Norris doesn't need an axe or saw to cut down a tree -- he needs only his foot, or his fist, or his glare. ?>","title":"Revision PHP"},{"location":"notes_de_cours/revision_php/#revision-php","text":"","title":"R\u00e9vision PHP"},{"location":"notes_de_cours/revision_php/#syntaxe","text":"Un script PHP doit \u00eatre d\u00e9buter par <?php et ce termin\u00e9 par ?> Chaque ligne de code se termine par un point-virgule. Les noms de variable d\u00e9butent par le symbole $","title":"Syntaxe"},{"location":"notes_de_cours/revision_php/#executer-un-script-en-ligne-de-commande","text":"Pour lancer un script depuis la ligne de commande # Si le chemin vers l'interpreteur PHP est dans les variables d'environnement > php monScript.php # Sinon il faut sp\u00e9cifier le chemin en entier > 'C:\\Program Files\\Ampps\\php-7.3\\php.exe' monScript.php","title":"Ex\u00e9cuter un script en ligne de commande"},{"location":"notes_de_cours/revision_php/#operateur-de-coalescence-des-nuls","text":"?? est un op\u00e9rateur logique qui retourne la premi\u00e8re valeur qui existe et qui est non null. Il est possible d'encha\u00eener plusieurs op\u00e9rateurs de coalescence \u00e0 la suite. <?php // Si $_GET['utilisateur'] n'est pas d\u00e9fini ou vaut null, $utilisateur vaudra 'aucun' $utilisateur = $_GET['utilisateur'] ?? 'aucun'; // On peut encha\u00eener plusieurs ?? comme ceci $utilisateur = $_GET['utilisateur'] ?? $_POST['utilisateur'] ?? 'aucun'; ?>","title":"Op\u00e9rateur de coalescence des nuls ( ?? )"},{"location":"notes_de_cours/revision_php/#tableau","text":"","title":"Tableau"},{"location":"notes_de_cours/revision_php/#declaration-dun-tableau","text":"Pour d\u00e9clarer un tableau, on peut utiliser la fonction array() ou en notation courte utiliser [] <?php // D\u00e9claration d'un tableau avec la fonction array() $monTableau = array(\"item1\", \"item2\", \"item3\"); // D\u00e9claration d'un tableau avec la notation courte $monTableau = [\"item1\", \"item2\", \"item3\"]; ?> Chaque \u00e9l\u00e9ment du tableau est associ\u00e9 \u00e0 une cl\u00e9 (son index dans le tableau). Si la cl\u00e9 n'est pas sp\u00e9cifi\u00e9, comme dans l'exemple plus haut, elle sera autog\u00e9n\u00e9r\u00e9 de fa\u00e7on incr\u00e9mentiel (0, 1, 2, etc...). Il est aussi possible de d\u00e9finir la cl\u00e9 de chaque item. <?php $monTableau = array( 1 => \"item1\", 2 => \"item2\", 3 => \"item3\", ); $monTableau = [ \"fruits\" => [\"banane\", \"pomme\", \"raisin\"], \"legumes\" => [\"carotte\", \"patate\", \"navet\"], ]; ?>","title":"D\u00e9claration d'un tableau"},{"location":"notes_de_cours/revision_php/#acces-aux-elements-dun-tableau","text":"On acc\u00e8de \u00e0 la valeur d'un \u00e9l\u00e9ment du tableau par sa cl\u00e9 <?php $monTableau = [\"item1\", \"item2\", \"item3\"]; echo $monTableau[0]; // \"item1\" $monTableau = [ \"fruits\" => [\"banane\", \"pomme\", \"raisin\"], \"legumes\" => [\"carotte\", \"patate\", \"navet\"], ]; echo $monTableau[\"legumes\"][1]; // \"patate\" ?>","title":"Acc\u00e8s aux \u00e9l\u00e9ments d'un tableau"},{"location":"notes_de_cours/revision_php/#ajoutermodifiersupprimer-un-element","text":"<?php $monTableau = [\"item1\", \"item2\", \"item3\"]; // Pour ajouter un \u00e9l\u00e9ment au tableau, on donne ou non une cl\u00e9 libre $monTableau[] = \"item4\"; $monTableau[4] = \"item5\"; // Pour modifier un \u00e9l\u00e9ment, on doit donner la cl\u00e9 de l'\u00e9l\u00e9ment \u00e0 modifier $monTableau[4] = \"item5 modifi\u00e9\" // On supprime un item avec la fonction unset en sp\u00e9cifiant la cl\u00e9 de l'\u00e9l\u00e9ment \u00e0 supprimer unset($monTableau[4]); // Attention, si aucune cl\u00e9 n'est donn\u00e9e, c'est tout le tableau qui sera supprim\u00e9 unset($monTableau); ?>","title":"Ajouter/modifier/supprimer un \u00e9l\u00e9ment"},{"location":"notes_de_cours/revision_php/#boucle-sur-un-tableau","text":"Pour boucler sur les \u00e9l\u00e9ments d'un tableau, on utilise foreach <?php $monTableau = [ \"prenom\" => \"Mathieu\", \"nom\" => \"Frechette\", ]; foreach($monTableau as $item) { echo \"$item\\n\"; } /* Mathieu Frechette */ // On peut aussi r\u00e9cup\u00e9rer la cl\u00e9 de chaque \u00e9l\u00e9ment foreach($monTableau as $cle => $valeur) { echo \"$cle = $valeur\\n\"; } /* prenom = Mathieu nom = frechette */ ?>","title":"Boucle sur un tableau"},{"location":"notes_de_cours/revision_php/#deballer-un-tableau","text":"En pr\u00e9fixant le tableau par trois points ( ...$monTableau), le tableau sera \"d\u00e9ball\u00e9\" lors de se d\u00e9finition, c'est \u00e0 dire qu'on aura acc\u00e8s \u00e0 tous les \u00e9l\u00e9ments du tableau. (Disponible depuis PHP 7.4.0) <?php $monTableau = [\"item1\", \"item2\", \"item3\"]; // Copier le tableau $tableau2 = [...$monTableau]; // [\"item1\", \"item2\", \"item3\"] // Ajouter des \u00e9l\u00e9ments au tableau; $tableau3 = [\"item0\", ...$monTableau, \"item4\"]; // [\"item0, \"item1\", \"item2\", \"item3\", \"item4\"] // Fusionner des tableaux $tableau4 = [...$tableau2, ...$tableau3]; // [\"item1\", \"item2\", \"item3\", \"item0, \"item1\", \"item2\", \"item3\", \"item4\"] // On peut aussi l'utiliser avec une fonction qui retourne un tableau function getTableau() { return [\"item5\", \"item6\"]; } $tableau5 = [...getTableau(), \"item7\"]; //[\"item5\", \"item6\", \"item7\"] ?>","title":"D\u00e9baller un tableau"},{"location":"notes_de_cours/revision_php/#array_filter","text":"La fonction array_filter() permet de filter les \u00e9l\u00e9ments d'un tableau par une fonction de Callback. Array_filter() prends en param\u00e8tre le tableau sur lequelle effectuer le traitement la fonction de Callback. On peut appeler une fonction existante ou bien directement la d\u00e9clarer \u00e0 l'int\u00e9rieur de array_map(). <?php // Soit le tableau de nombre suivant $nombres = [1, 2, 3, 4, 5]; // On veut cr\u00e9er un nouveau tableau avec uniquement les nombres impairs $nombresImpair = array_filter($nombres, function ($nombre) { return $nombre % 2 === 1; } ); // [1, 3, 5] ?>","title":"Array_filter()"},{"location":"notes_de_cours/revision_php/#array_map","text":"La fonction array_map() permet d'appliquer une fonction sur chaque \u00e9l\u00e9ment d'un tableau et de retourner un nouveau tableau du r\u00e9sultat. Array_map() prends en param\u00e8tre la fonction de Callback et le tableau sur lequelle effectuer le traitement. On peut appeler une fonction existante ou bien directement la d\u00e9clarer \u00e0 l'int\u00e9rieur de array_map(). <?php // Soit le tableau de nombre suivant $nombres = [10,12,14,13]; // On veut cr\u00e9er un tableau avec de ces nombres doubl\u00e9s $nombresDouble = array_map(function ($nombre) { return $nombre * 2; }, $nombres); // [20, 22, 28, 26] ?> R\u00e9f\u00e9rence : www.php.net/manual/fr/language.types.array.php www.w3schools.com/php/php_ref_array.asp www.php.net/manual/fr/ref.array.php","title":"Array_map()"},{"location":"notes_de_cours/revision_php/#json-en-php","text":"Pour encoder une valeur en format JSON, on utilisera la fonction json_encode(). <?php $monTableau = [ \"prenom\" => \"Mathieu\", \"nom\" => \"Frechette\", ]; echo json_encode($monTableau); /* { \"prenom\":\"Mathieu\", \"nom\":\"Frechette\" } */ $monTableauPlusComplexe = [ \"Resultats\" => [ [ \"prenom\" => \"Mathieu\", \"nom\" => \"Frechette\", ], [ \"prenom\" => \"Anthony\", \"nom\" => \"Frechette\", ], ] ]; echo json_encode($monTableauPlusComplexe); /* { \"Resultats\":[ { \"prenom\":\"Mathieu\", \"nom\":\"Frechette\" }, { \"prenom\":\"Anthony\", \"nom\":\"Frechette\" } ] } */ ?> \u00c0 l'inverse, pour convertir un objet JSON en un objet ou un tableau associatif (avec des cl\u00e9s d\u00e9finies) on utilisera la fonction json_decode(). Elle prend en param\u00eatre l'objet Json \u00e0 convertir et optionnellement un valeur boolean qui indique si on veut que soit cr\u00e9e un tableau associatif ou non. Par d\u00e9faut ce param\u00eatre prend la valeur false, ce qui cr\u00e9e un objet. <?php $jsonData = '{\"prenom\":\"Mathieu\",\"nom\":\"Frechette\"}'; $objetUsager = json_decode($jsonData); echo $objetUsager->prenom; // Mathieu $tableauUsager = json_decode($jsonData, true); echo $tableauUsager[\"prenom\"]; // Mathieu ?>","title":"JSON en PHP"},{"location":"notes_de_cours/revision_php/#effectuer-un-appel-get-a-un-service-web","text":"On peut utiliser la fonction native file_get_contents() pour faire un appel GET \u00e0 un api avec un url. <?php $url = 'https://api.chucknorris.io/jokes/random'; $reponseEnJson = file_get_contents($url); /* { \"categories\": [], \"created_at\": \"2020-01-05 13:42:29.296379\", \"icon_url\": \"https://assets.chucknorris.host/img/avatar/chuck-norris.png\", \"id\": \"bESHJ3YrTEW638ky0rr3Yg\", \"updated_at\": \"2020-01-05 13:42:29.296379\", \"url\": \"https://api.chucknorris.io/jokes/bESHJ3YrTEW638ky0rr3Yg\", \"value\": \"Chuck Norris doesn't need an axe or saw to cut down a tree -- he needs only his foot, or his fist, or his glare.\" } */ $objetReponse = json_decode($reponseEnJson); echo $objetReponse->value; // Chuck Norris doesn't need an axe or saw to cut down a tree -- he needs only his foot, or his fist, or his glare. ?>","title":"Effectuer un appel GET \u00e0 un service web"},{"location":"notes_de_cours/variable_environnement/","text":"","title":"Variable environnement"}]}